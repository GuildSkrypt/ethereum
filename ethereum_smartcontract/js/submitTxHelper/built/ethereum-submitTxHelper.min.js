!function(){return function e(t,r,n){function o(s,a){if(!r[s]){if(!t[s]){var l="function"==typeof require&&require;if(!a&&l)return l(s,!0);if(i)return i(s,!0);var c=new Error("Cannot find module '"+s+"'");throw c.code="MODULE_NOT_FOUND",c}var h=r[s]={exports:{}};t[s][0].call(h.exports,function(e){return o(t[s][1][e]||e)},h,h.exports,e,t,r,n)}return r[s].exports}for(var i="function"==typeof require&&require,s=0;s<n.length;s++)o(n[s]);return o}}()({1:[function(e,t,r){window.addEventListener("web3Ready",()=>{window.web3Runner.runWhenReady({requireAccount:!1,networkId:drupalSettings.ethereum_txsigner.network.id,run:(e,t=null)=>{Drupal.behaviors.txHash=new
/*!
 * EthereumSignup - Ethereum based hallenge/response authentication for Drupal.
 * @author Thorsten Krug
 * @license  GPL2
 */
class{constructor(e,t,r,n){this.web3=e,this.submitUrl=r,this.chainExplorer=n,this.process=this.process.bind(this)}async submit(e,t,r="mascara-logger"){this.addLogger(r,e);const n=await this.process(e);this.removeLogger(r,e),t(n)}async process(e){const t=await this.web3.eth.getTransaction(e);if(t&&t.blockNumber){const t=`${this.submitUrl+e}?_format=json`;return fetch(t,{method:"get",credentials:"same-origin"})}return await this.timeout(1e3),this.process(e)}addLogger(e,t){let r="";this.chainExplorer.tx&&(r=this.chainExplorer.tx.replace("@tx",t)),document.getElementById(e).insertAdjacentHTML("afterbegin",Drupal.theme.logger(t,r))}removeLogger(e,t){document.getElementById(e).removeChild(document.getElementById(t))}async timeout(e){return new Promise(t=>setTimeout(t,e))}}(e,t,drupalSettings.ethereum_smartcontract.processTxUrl,drupalSettings.ethereum_txsigner.network.blockExplorerLinks)}})}),Drupal.theme.logger=((e,t)=>{let r=`<span class="blockchain-explorer-hash">${e}</span>`;return t&&(r=`<a title="Show on Blockchain explorer" class="blockchain-explorer-hash" target="_blank" href="${t}">${e}</a> `,r+=`&nbsp;<a title="Show on Blockchain explorer" class="blockchain-explorer-link" target="_blank" href="${t}">${Drupal.theme.newTab()}</a>`),`<span class="transaction" id="${e}">${Drupal.theme.clock()}${Drupal.t("Processing transaction")}${r}</span>`}),Drupal.theme.clock=(()=>'\n<span class="clock">\n  <svg class="clock--svg" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\n    viewBox="0 0 100 100" enable-background="new 0 0 100 100" xml:space="preserve">\n  <circle fill="none" stroke="#fff" stroke-width="4" stroke-miterlimit="10" cx="50" cy="50" r="48"/>\n  <line fill="none" stroke-linecap="round" stroke="#fff" stroke-width="4" stroke-miterlimit="10" x1="50" y1="50" x2="85" y2="50.5">\n    <animateTransform \n         attributeName="transform" \n         dur="2s"\n         type="rotate"\n         from="0 50 50"\n         to="360 50 50"\n         repeatCount="indefinite" />\n  </line>\n  <line fill="none" stroke-linecap="round" stroke="#fff" stroke-width="4" stroke-miterlimit="10" x1="50" y1="50" x2="49.5" y2="74">\n    <animateTransform \n         attributeName="transform" \n         dur="15s"\n         type="rotate"\n         from="0 50 50"\n         to="360 50 50"\n         repeatCount="indefinite" />\n  </line>\n  </svg>\n</span>\n'),Drupal.theme.newTab=(()=>'\n<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 20 20">\n  <path d="M17 17H3V3h5V1H3a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-5h-2z"/>\n  <path d="M19 1h-8l3.29 3.29-5.73 5.73 1.42 1.42 5.73-5.73L19 9V1z"/>\n</svg>')},{}]},{},[1]);